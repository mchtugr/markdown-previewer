{"version":3,"sources":["actions/types.js","reducers/index.js","actions/index.js","components/ToolBar.js","components/EditorTab.js","components/PreviewTab.js","components/App.js","index.js"],"names":["TEXT_COPY","RESIZE_EDITOR","RESIZE_PREVIEW","initialState","combineReducers","input","state","action","type","payload","resize","isEditorMaximized","isPreviewMaximized","resizeEditor","connect","resizePreview","title","editorContent","size","onClick","className","previewContent","text","copyText","isMaximized","id","onChange","e","target","value","marked","setOptions","breaks","PreviewTab","this","props","dangerouslySetInnerHTML","__html","Component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.de401e3c.chunk.js","sourcesContent":["export const TEXT_COPY = 'TEXT_COPY';\nexport const RESIZE_EDITOR = 'RESIZE_EDITOR';\nexport const RESIZE_PREVIEW = 'RESIZE_PREVIEW';","import { combineReducers } from 'redux';\nimport { TEXT_COPY, RESIZE_EDITOR, RESIZE_PREVIEW } from '../actions/types';\nconst initialState = `# Hello guys!!!\n\n## You can see my Markdown Project here.\n### _React_ and _Redux_ were used in the project.\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![Ginger Cat](https://images.pexels.com/photos/1170986/pexels-photo-1170986.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)\n`;\n\nconst textCopyReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case TEXT_COPY :\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst resizeReducer = (state={isEditorMaximized:false, isPreviewMaximized:false}, action) => {\n    switch(action.type) {\n      case RESIZE_EDITOR :\n        return {...state, isEditorMaximized: !state.isEditorMaximized };\n      case RESIZE_PREVIEW :\n        return {...state, isPreviewMaximized: !state.isPreviewMaximized};\n      default : \n        return state;\n    }\n}\nexport default combineReducers({\n  input : textCopyReducer,\n  resize : resizeReducer\n})","import { TEXT_COPY, RESIZE_EDITOR, RESIZE_PREVIEW } from './types';\n\n\nexport const copyText = (text) => {\n    return {\n        type : TEXT_COPY,\n        payload : text\n    }\n}\n\nexport const resizeEditor = () => {\n    return {\n        type : RESIZE_EDITOR\n    }\n}\n\nexport const resizePreview = () => {\n    return {\n        type : RESIZE_PREVIEW\n    }\n}","import React from 'react';\nimport { FaEdit, FaEye, FaExpandArrowsAlt } from 'react-icons/fa';\nimport { FiMinimize2 } from 'react-icons/fi';\nimport { connect } from 'react-redux';\n\nimport { resizePreview, resizeEditor } from '../actions';\n\n\nconst ToolBar = ({ title, isEditorMaximized, isPreviewMaximized, resizePreview, resizeEditor }) => {\n        const editorContent = (\n            <>\n            <FaEdit size='2rem' />\n                <h3>{title}</h3>\n                <span onClick={resizeEditor} className='toggle-button'>\n                    {isEditorMaximized ? <FiMinimize2 size='1.5rem' /> : <FaExpandArrowsAlt size='1.5rem' /> }\n                </span>\n            </>\n        );\n        const previewContent = (\n            <>\n                <FaEye size='2rem'/>\n                <h3>{title}</h3>\n                <span onClick={resizePreview} className='toggle-button'>\n                    {isPreviewMaximized ? <FiMinimize2 size='1.5rem' /> : <FaExpandArrowsAlt size='1.5rem' /> }\n                </span>\n            </>\n        )\n        return (\n            <div className='toolbar'>\n                <div className=\"d-flex justify-content-between\">\n                    {title === 'Editor' ? editorContent : previewContent }\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isEditorMaximized : state.resize.isEditorMaximized,\n        isPreviewMaximized : state.resize.isPreviewMaximized\n    }\n}\n\nexport default connect(mapStateToProps, { resizePreview, resizeEditor })(ToolBar)\n","import React from 'react'\nimport { connect } from 'react-redux';\n\nimport ToolBar from './ToolBar';\nimport { copyText, resizeEditor } from '../actions';\n\n\nconst EditorTab = ({ copyText, text, isPreviewMaximized, isMaximized }) => {\n\n    const handleChange = e => {\n        copyText(e.target.value);\n    }\n    return (\n        <div \n            className={`col bg-light text-dark ${isPreviewMaximized && 'display-none'}`} \n            id='text-edit'\n        >\n            <ToolBar title='Editor' />\n            <textarea \n                id=\"editor\" \n                className='form-control' \n                onChange={handleChange}\n                value={text}\n            >\n            </textarea>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        text : state.input,\n        isPreviewMaximized : state.resize.isPreviewMaximized\n    }\n}\n\nexport default connect(mapStateToProps, { copyText, resizeEditor })(EditorTab);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport marked from 'marked';\n\nimport ToolBar from './ToolBar';\n\n\nmarked.setOptions({\n  breaks: true\n});\nclass PreviewTab extends Component {\n\n    render() {\n        return (\n            <div id='preview-container' className={`col ${this.props.isEditorMaximized && 'display-none'}`} >\n                <ToolBar title='Preview' />\n                <div \n                id='preview'\n                className='bg-light'\n                dangerouslySetInnerHTML={{__html: marked(this.props.text)}}\n                ></div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        text : state.input,\n        isEditorMaximized : state.resize.isEditorMaximized    \n    }\n}\n\nexport default connect(mapStateToProps)(PreviewTab)\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport EditorTab from './EditorTab'\nimport PreviewTab from './PreviewTab'\n\n\nconst App = ({ isEditorMaximized, isPreviewMaximized }) => {\n\n        return (\n            <div className='container-fluid'>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className='text-center'>Markdown Previewer</h1>\n                    </div>\n                </div>\n                <div className=\"row\" >\n                        <EditorTab />\n                        <PreviewTab />\n                </div>\n            </div>\n        )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isEditorMaximized : state.resize.isEditorMaximized,\n        isPreviewMaximized : state.resize.isPreviewMaximized\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\n\n\n\nimport App from './components/App';\nimport './index.css';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer, composeEnhancers(applyMiddleware())\n    );\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\ndocument.querySelector('#root')\n);\n"],"sourceRoot":""}